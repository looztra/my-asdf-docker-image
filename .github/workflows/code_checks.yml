---
name: Code checks
on:
  push:
    branches:
      - main
    tags:
      - v*.*.*
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:
    inputs:
      force_release:
        description: Force release
        required: false
        type: boolean
        default: false

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-checks
  cancel-in-progress: true

env:
  UV_LINK_MODE: copy
  UV_PYTHON_PREFERENCE: only-managed
  UV_CACHE_DIR: /tmp/.uv-cache

jobs:
  pre-commit:
    name: Pre-commit
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: jdx/mise-action@v2
        with:
          install: true
          cache: true

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Setup venv
        run: |
          uv python install

      - name: Minimize uv cache
        run: uv cache prune --ci

      - name: Detect Python version
        id: detect-python-version
        run: |
          echo "python_version=$(python --version | cut -d " " -f2 | cut -d . -f1-2)" >> "${GITHUB_OUTPUT}"

      - name: Restore pre-commit cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ steps.detect-python-version.outputs.python_version }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run pre-commit checks
        run: |
          echo "::group::Run pre-commit checks"
          pre-commit run --all-files --show-diff-on-failure
          echo "::endgroup::"

  docker-build:
    name: Docker build
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: false
          tags: looztra/asdf-debian:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
