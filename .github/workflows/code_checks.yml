---
name: Code checks
on:
  push:
    branches:
      - main
    tags:
      - v*.*.*
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:
    inputs:
      force_push:
        description: Enforce docker push
        required: false
        type: boolean
        default: false

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-checks
  cancel-in-progress: true

env:
  UV_LINK_MODE: copy
  UV_PYTHON_PREFERENCE: only-managed
  UV_CACHE_DIR: /tmp/.uv-cache

jobs:
  pre-commit:
    name: Pre-commit
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: jdx/mise-action@v2
        with:
          install: true
          cache: true

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Setup venv
        run: |
          uv python install

      - name: Minimize uv cache
        run: uv cache prune --ci

      - name: Detect Python version
        id: detect-python-version
        run: |
          echo "python_version=$(python --version | cut -d " " -f2 | cut -d . -f1-2)" >> "${GITHUB_OUTPUT}"

      - name: Restore pre-commit cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ steps.detect-python-version.outputs.python_version }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run pre-commit checks
        run: |
          echo "::group::Run pre-commit checks"
          pre-commit run --all-files --show-diff-on-failure
          echo "::endgroup::"

  docker-build:
    name: Docker build
    needs: pre-commit
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Do we need to publish the docker image?
        id: detect-push-request
        shell: bash
        run: |
          push_requested=false
          git_sha1=${{ github.sha }}
          git_sha1_short="${git_sha1:0:7}"
          safe_git_ref_name=$(echo "${{ github.ref_name }}" | tr "/" "-" | tr "." "-")
          docker_tag_long="${safe_git_ref_name}.$(date +%F.%H%M%S)-${git_sha1_short}"
          docker_tag_short=${git_sha1_short}
          if [[ "${{ github.event_name }}" == 'workflow_dispatch' ]] && [[ "${{ inputs.force_push }}" == "true" ]]; then
            push_requested=yes
          elif [[ "${{ github.event_name }}" == 'push' ]] && [[ "${{ github.ref }}" == 'refs/tags/v*' ]]; then
            push_requested=yes
            docker_tag_long=${{ github.ref_name }}
          fi
          echo "::group::Detect push request debug"
          echo "github.event_name=[${{ github.event_name }}]"
          echo "github.ref=[${{ github.ref }}]"
          echo "github.ref_name=[${{ github.ref_name }}]"
          echo "inputs.force_push=[${{ inputs.force_push }}]"
          echo "push_requested=[${push_requested}]"
          echo "docker_tag_long=[${docker_tag_long}]"
          echo "docker_tag_short=[${docker_tag_short}]"
          echo "::endgroup::"
          echo "::notice title=Detect push request::push_requested=${push_requested}"
          echo "push_requested=${push_requested}" >> "${GITHUB_OUTPUT}"
          {
          echo "docker_tag_long=${docker_tag_long}"
          echo "docker_tag_short=${docker_tag_short}"
          } >> "${GITHUB_OUTPUT}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: ${{ steps.detect-push-request.outputs.push_requested == 'true' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: ${{ steps.detect-push-request.outputs.push_requested == 'true' }}
          tags: |
            nodevops/asdf-debian:${{ steps.detect-push-request.outputs.docker_tag_long }}
            nodevops/asdf-debian:${{ steps.detect-push-request.outputs.docker_tag_short }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
